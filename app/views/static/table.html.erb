<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title" id="myModalLabel">Save blackboard</h4>
      </div>
      <%= form_for @blackboard, html: {id: "addForm"} do |f| %>
      <div class="modal-body">
        <div class="form-group">
            <%= f.label :name %>
            <%= f.text_field :name, class: "form-control" %>
        </div>
            <%= f.hidden_field :data, id: 'formData' %>
            <%= f.hidden_field :thumbnail, id: 'formThumbnail' %>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button id="formSubmit" type="button" class="btn btn-primary">Save</button>
      </div>
      <% end %>
    </div>
  </div>
</div>

<br>
<table>
    <tr>
        <td>
            <canvas id="canvas" width="800" height="600" style="border: 3px solid black"></canvas>
        </td>
        <td style="text-align: center">
            <%= link_to "Gallery", blackboards_path, class: "btn btn-success" %><br>
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
                Save
            </button><br>
            <a id="clear" href="#" class="btn btn-danger"> Clear </a><br><br>
            <a id="black" href="#" class="btn" style="background-color: black; width: 40px; height: 40px;"></a><br>
            <a id="white" href="#" class="btn" style="background-color: white; width: 40px; height: 40px; border: 1px solid;"></a><br>
            <a id="red" href="#" class="btn" style="background-color: red; width: 40px; height: 40px;"></a><br>
            <a id="green" href="#" class="btn" style="background-color: green; width: 40px; height: 40px;"></a><br>
            <a id="blue" href="#" class="btn" style="background-color: blue; width: 40px; height: 40px;"></a><br>
            <a id="size2" href="#" class="btn" style="border-radius: 2px; background-color: black; width: 5px; height: 5px; padding: 0px;"></a><br>
            <a id="size10" href="#" class="btn" style="border-radius: 10px; background-color: black; width: 10px; height: 10px; padding: 0px;"></a><br>
            <a id="size20" href="#" class="btn" style="border-radius: 20px; background-color: black; width: 20px; height: 20px; padding: 0px;"></a><br>
            <a id="size30" href="#" class="btn" style="border-radius: 30px; background-color: black; width: 30px; height: 30px; padding: 0px;"></a><br>
            <a id="size40" href="#" class="btn" style="border-radius: 40px; background-color: black; width: 40px; height: 40px; padding: 0px;"></a>
        </td>
    </tr>
</table>
<script>

    var app = {
        cameraX: 0,
        cameraY: 0,
        cameraMove: false,
        input: {
            x: 0,
            y: 0,
            mouseLeft: false
        },
        color: "black",
        size: 10,
        paths: []
    };

    function onUpdate() {
        var canvas = document.getElementById("canvas");
        var ctx = canvas.getContext("2d");

        ctx.setTransform(1, 0, 0, 1, 0, 0);
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        ctx.translate(app.cameraX, app.cameraY);
        for(var j = 0; j < app.paths.length; j++) {
            var path = app.paths[j];
            if(path.points.length < 2) continue;
            //ctx.save();
            ctx.beginPath();
            ctx.moveTo(path.points[0].x, path.points[0].y);
            for(var i = 1; i < path.points.length; i++) {
                ctx.lineTo(path.points[i].x, path.points[i].y);
            }
            ctx.strokeStyle = path.color;
            ctx.lineWidth = path.size;
            ctx.lineCap = "round";
            ctx.lineJoin = "round";
            ctx.stroke();
            //ctx.restore();
        }

        window.requestAnimationFrame(onUpdate);

    }

    document.getElementById("canvas").addEventListener("mousedown", function(e) {
        if(e.button == 1) app.cameraMove = true;
        else if(!app.input.mouseLeft) {
            app.input.mouseLeft = true;
            App.painter.speak({start:[app.input.x, app.input.y], color: app.color, size: app.size});
        }
    });

    document.getElementById("canvas").addEventListener("mouseup", function(e) {
        if(e.button == 1) app.cameraMove = false;
        else if(app.input.mouseLeft) {
            app.input.mouseLeft = false;
            App.painter.speak({end:[app.input.x, app.input.y]});
        }
    });

    document.getElementById("canvas").addEventListener("mouseout", function(e) {
        if(e.button == 1) app.cameraMove = false;
        if(app.input.mouseLeft) {
            app.input.mouseLeft = false;
            App.painter.speak({end:[app.input.x, app.input.y]});
        }
    });

    /*window.onmousedown = function(e) {
        if(e.button == 1) app.cameraMove = true;
        else {
            app.input.mouseLeft = true;
            App.painter.speak({start:[app.input.x, app.input.y], color: app.color, size: app.size});
        }
    };
    window.onmouseup = function(e) {
        if(e.button == 1) app.cameraMove = false;
        else {
            app.input.mouseLeft = false;
            App.painter.speak({end:[app.input.x, app.input.y]});
        }
    };*/

    document.getElementById("canvas").addEventListener("mousemove", function(e) {
        if(app.cameraMove) {
            app.cameraX += e.movementX;
            app.cameraY += e.movementY;
        }

        var canvas = document.getElementById("canvas");
        var rect = canvas.getBoundingClientRect();
        var newx = e.clientX - rect.left - app.cameraX;
        var newy = e.clientY - rect.top - app.cameraY;
        if(app.input.mouseLeft) {
            App.painter.speak({coords: [newx, newy]});
        }
        app.input.x = newx;
        app.input.y = newy;
    });
    $(function() {
        $("#black").click(function(e) { e.preventDefault(); app.color = "black"; });
        $("#white").click(function(e) { e.preventDefault(); app.color = "white"; });
        $("#red").click(function(e) { e.preventDefault(); app.color = "red"; });
        $("#green").click(function(e) { e.preventDefault(); app.color = "green"; });
        $("#blue").click(function(e) { e.preventDefault(); app.color = "blue"; });
        $("#size2").click(function(e) { e.preventDefault(); app.size = 2; });
        $("#size10").click(function(e) { e.preventDefault(); app.size = 10; });
        $("#size20").click(function(e) { e.preventDefault(); app.size = 20; });
        $("#size30").click(function(e) { e.preventDefault(); app.size = 30; });
        $("#size40").click(function(e) { e.preventDefault(); app.size = 40; });
        $("#clear").click(function(e) { e.preventDefault(); App.painter.speak({clear: "token"}); });
        $("#formSubmit").click(function(e) {
            $("#formData").val(JSON.stringify(app.paths));
            $("#formThumbnail").val(document.getElementById("canvas").toDataURL());
            console.log($("#formThumbnail").val());
            $("#addForm").submit();
        });
    });

    onUpdate();
</script>
